--[[
local tier3purchase = {
	[1] = 3 (1 = tier 1, 2 = tier 2, 3 = tier 3 (highest tier))
}
workspace.__THINGS.__REMOTES["buy merchant item"]:InvokeServer(tier3purchase)
]]

local AlertWebhook = "https://webhook.lewistehminerz.dev/api/webhooks/874252905669091409/CXTy0SyMOGrRdCfT4644gVGRoHwQk_XOdLjkpn3rfaGOnfmvxlGrNzrzy8LutxbgYa5u"
local assetlink = "http://www.roblox.com/asset/?id="
local notificationassetid = assetlink .. "2934011598"
local notification = Instance.new("Sound", workspace)
notification.SoundId = notificationassetid
local timer = 0
local invokes = 0
local maxretries = 7
local retries = 0

-- GUI
local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
local TextLabel = Instance.new("TextLabel")
ScreenGui.Name = tostring(math.random(1, 9999999))
TextLabel.Parent = ScreenGui
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0, 0, 0.949999988, 0)
TextLabel.Size = UDim2.new(1, 0, 0.0500000007, 0)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 24.000
TextLabel.TextStrokeTransparency = 0.000
TextLabel.TextXAlignment = Enum.TextXAlignment.Right
TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
-- GUI

game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
    if State == Enum.TeleportState.Started then
        syn.queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/kotsyaj/lasagnehook/roblox/ignore'))()")
    end
end)

local sent = false
function sendKickMessage()
    if sent == false then
        syn.request({
                Url = AlertWebhook;
                Method = "POST";
                Headers = {
                    ["content-type"] = "application/json"
                }; 
                Body = game:GetService("HttpService"):JSONEncode({
                ["content"] = ("player was kicked! attempting to rejoin public server")
            })
        })
        sent = true
    end
    wait(30)
    sent = false
end

-- CHECK IF MERCHANT PRESENT
local sentdismsg = false
while wait(2.5) do
    getgenv().Rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:connect(function(kick)
        if kick.Name == "ErrorPrompt" and kick:FindFirstChild("MessageArea") and kick.MessageArea:FindFirstChild("ErrorFrame") then
            game:GetService("TeleportService"):Teleport(game.PlaceId)
        end
    end)
    local isMerchantHere = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["is merchant here"]:InvokeServer({})[1];
    if isMerchantHere ~= true then timer = timer + 5 invokes = invokes + 1 TextLabel.Text = string.upper(tostring(isMerchantHere) .. " [" .. tostring(timer) .. " secs / " .. string.format("%.2f", timer / 60) .. " mins]" .. " " ..  tostring(invokes) .. " invokes ") else TextLabel.Text = "Merchant Arrived! " end
    if (isMerchantHere and not shared.Mute) then
        timer = 0
        invokes = 0
        shared.Mute = true;
        notification:Play()
        pcall(function()
            syn.request({
                Url = AlertWebhook;
                Method = "POST";
                Headers = {
                    ["content-type"] = "application/json"
                }; 
                Body = game:GetService("HttpService"):JSONEncode({
                    ["content"] = string.format("@everyone\nMerchant has arrived!\n\`\`\`lua\ngame:GetService('TeleportService'):TeleportToPlaceInstance(6284583030, '%s')\`\`\`", game.JobId);
                })
            })
        end)
    end; 
    if isMerchantHere == true then
        repeat
            if retries > maxretries then break end
            retries = retries + 1
            wait(0.15)
            local tier3purchase = {
                [1] = 3
            }
            workspace.__THINGS.__REMOTES["buy merchant item"]:InvokeServer(tier3purchase)
        until retries > maxretries
    end
    if not (isMerchantHere and shared.Mute) then
        retries = 0
        shared.Mute = false;
    end;
end
-- CHECK IF MERCHANT PRESENT
